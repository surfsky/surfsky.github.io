import{c as t,i as e,E as s,W as i,a as n}from"./WebHelper-Cm7Nj4uJ.js";class h{constructor(){this.data=[]}setData(t){this.data=t}getPreview(){return this.data.slice(0,10)}findDistinct(t){if(!this.data.length)throw new Error("数据未准备就绪");if(!t||0===t.length)throw new Error("请选择要查重的列");const e=[],s=new Set;for(const i of this.data){const n=t.map(t=>i[t]).join("-");if(!s.has(n)){s.add(n);const h={};t.forEach(t=>{h[t]=i[t]}),e.push(h)}}return e}}const a=t({data:()=>({distinctTool:new h,file:null,sheets:[],sheet:"",columns:[],keyColumns:[],previewList:[],previewColumns:[],distinctData:[],resultColumns:[],isProcessing:!1,currentPage:1,pageSize:10}),methods:{resetFile(){this.file=null,this.sheets=[],this.sheet="",this.columns=[],this.keyColumns=[],this.distinctTool.setData([]),this.resetPreviewAndResult()},resetPreviewAndResult(){this.previewList=[],this.previewColumns=[],this.distinctData=[],this.resultColumns=[]},async handleFileChange(t){this.resetFile(),this.file=t.raw,this.file&&(this.sheets=await n.getSheetNames(this.file),this.sheets.length>0&&(this.sheet=this.sheets[0],await this.onSheetChange(this.sheet)))},async onSheetChange(t){if(!this.file)return;this.columns=[],this.keyColumns=[],this.resetPreviewAndResult();const e=await n.readExcelFile(this.file,t);e.length>0?(this.columns=Object.keys(e[0]),this.distinctTool.setData(e)):this.distinctTool.setData([])},previewData(){if(!this.sheet)return void s.warning("请先选择Sheet");const t=this.distinctTool.getPreview();this.previewList=t,this.previewColumns=t.length>0?Object.keys(t[0]).map(t=>({prop:t,label:t})):[]},findDistinctData(){this.isProcessing=!0,setTimeout(()=>{try{const t=this.distinctTool.findDistinct(this.keyColumns);this.distinctData=t,t.length>0&&(this.resultColumns=Object.keys(t[0]).map(t=>({prop:t,label:t}))),s.success("查重完成")}catch(t){s.error(`查重失败: ${t.message}`)}finally{this.isProcessing=!1}},0)},exportResult(){if(0===this.distinctData.length)return void s.warning("没有可导出的结果");const t=i.getExportFileName("查重结果.xlsx");n.exportExcel(this.distinctData,t,!0)},handleSizeChange(t){this.pageSize=t,this.currentPage=1},handleCurrentChange(t){this.currentPage=t}},computed:{paginatedResult(){const t=(this.currentPage-1)*this.pageSize,e=t+this.pageSize;return this.distinctData.slice(t,e)}}});a.use(e),a.mount("#app");
