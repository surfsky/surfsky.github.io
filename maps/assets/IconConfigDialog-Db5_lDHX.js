import{d as n,T as e}from"./map-TMQd3wzp.js";const t=class{static show(n,e="输入信息",t="请输入...",o=""){return new Promise(i=>{this.currentModal&&this.close(),this.resolveCallback=i,this.currentModal=this.createModal(n,e,t,o),document.body.appendChild(this.currentModal),setTimeout(()=>{var n;const e=null==(n=this.currentModal)?void 0:n.querySelector("input");e&&(e.focus(),e.select())},100)})}static createModal(n,e,t,o){const i=document.createElement("div");return i.className="input-modal show",i.innerHTML=`\n            <div class="input-modal-content">\n                <h3>${e}</h3>\n                <p class="input-message">${n}</p>\n                <div class="input-container">\n                    <input type="text" class="input-field" placeholder="${t}" value="${o}">\n                </div>\n                <div class="input-buttons">\n                    <button class="input-btn secondary" data-action="cancel">取消</button>\n                    <button class="input-btn primary" data-action="confirm">确定</button>\n                </div>\n            </div>\n        `,this.injectStyles(),this.bindEvents(i),i}static bindEvents(n){const e=n.querySelector("input");n.addEventListener("click",n=>{const t=n.target.getAttribute("data-action");"confirm"===t?this.resolve(e.value.trim()):"cancel"===t&&this.resolve(null)}),n.addEventListener("click",e=>{e.target===n&&this.resolve(null)});const t=n=>{"Escape"===n.key?(this.resolve(null),document.removeEventListener("keydown",t)):"Enter"===n.key&&(n.preventDefault(),this.resolve(e.value.trim()),document.removeEventListener("keydown",t))};document.addEventListener("keydown",t),e.addEventListener("input",()=>{const t=n.querySelector('[data-action="confirm"]');t&&(t.disabled=0===e.value.trim().length)});const o=n.querySelector('[data-action="confirm"]');o&&(o.disabled=0===e.value.trim().length)}static resolve(n){this.resolveCallback&&(this.resolveCallback(n),this.resolveCallback=null),this.close()}static close(){this.currentModal&&(this.currentModal.remove(),this.currentModal=null)}static injectStyles(){const n="input-modal-styles";if(document.getElementById(n))return;const e=document.createElement("style");e.id=n,e.textContent="\n            .input-modal {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.5);\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                z-index: 20000;\n                opacity: 0;\n                visibility: hidden;\n                transition: all 0.3s ease;\n            }\n\n            .input-modal.show {\n                opacity: 1;\n                visibility: visible;\n            }\n\n            .input-modal-content {\n                background: white;\n                border-radius: 8px;\n                padding: 24px;\n                min-width: 360px;\n                max-width: 480px;\n                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n                transform: scale(0.9);\n                transition: transform 0.3s ease;\n            }\n\n            .input-modal.show .input-modal-content {\n                transform: scale(1);\n            }\n\n            .input-modal h3 {\n                margin: 0 0 16px 0;\n                font-size: 18px;\n                font-weight: 600;\n                color: #333;\n                text-align: center;\n            }\n\n            .input-message {\n                margin: 0 0 20px 0;\n                text-align: center;\n                color: #666;\n                line-height: 1.5;\n            }\n\n            .input-container {\n                margin: 20px 0;\n            }\n\n            .input-field {\n                width: 100%;\n                padding: 12px 16px;\n                border: 2px solid #e1e5e9;\n                border-radius: 6px;\n                font-size: 14px;\n                transition: border-color 0.2s ease;\n                box-sizing: border-box;\n            }\n\n            .input-field:focus {\n                outline: none;\n                border-color: #007bff;\n                box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n            }\n\n            .input-buttons {\n                display: flex;\n                gap: 12px;\n                justify-content: center;\n                margin-top: 24px;\n            }\n\n            .input-btn {\n                padding: 10px 24px;\n                border: none;\n                border-radius: 6px;\n                font-size: 14px;\n                font-weight: 500;\n                cursor: pointer;\n                transition: all 0.2s ease;\n                min-width: 80px;\n            }\n\n            .input-btn.primary {\n                background: #007bff;\n                color: white;\n            }\n\n            .input-btn.primary:hover:not(:disabled) {\n                background: #0056b3;\n            }\n\n            .input-btn.primary:disabled {\n                background: #6c757d;\n                cursor: not-allowed;\n                opacity: 0.6;\n            }\n\n            .input-btn.secondary {\n                background: #f8f9fa;\n                color: #6c757d;\n                border: 1px solid #dee2e6;\n            }\n\n            .input-btn.secondary:hover {\n                background: #e9ecef;\n                color: #495057;\n            }\n\n            .input-btn:active:not(:disabled) {\n                transform: translateY(1px);\n            }\n        ",document.head.appendChild(e)}};t.currentModal=null,t.resolveCallback=null;let o=t;const i=class t{constructor(){this.modal=null,this.createModal(),this.bindEvents(),this.injectStyles(),this.initIconConfig()}static getInstance(){return this.instance||(this.instance=new t),this.instance}static show(n){const e=this.getInstance();e.onConfigChanged=n,e.show()}static hide(){this.getInstance().hide()}setConfig(n){var e;(null==(e=this.modal)?void 0:e.classList.contains("show"))&&this.updateContent()}static onSettingsChange(n){this.getInstance().onConfigChanged=n}init(){}createModal(){this.modal=document.createElement("div"),this.modal.className="settings-modal",this.modal.innerHTML='\n            <div class="settings-modal-content">\n                <div class="settings-modal-header">\n                    <h3>图标设置</h3>\n                    <div class="header-actions">\n                        <button class="add-category-btn" data-action="add-category" title="新增类别">+ 新增类别</button>\n                        <button class="settings-modal-close" data-action="close">&times;</button>\n                    </div>\n                </div>\n                <div class="settings-modal-body">\n                    \x3c!-- 类别设置将在这里动态生成 --\x3e\n                </div>\n                <div class="settings-modal-footer">\n                    <button class="settings-btn-cancel" data-action="cancel">取消</button>\n                    <button class="settings-btn-save" data-action="save">保存</button>\n                </div>\n            </div>\n        ',document.body.appendChild(this.modal)}bindEvents(){this.modal&&(this.modal.addEventListener("click",n=>{n.target===this.modal&&this.hide()}),this.modal.addEventListener("click",n=>{switch(n.target.getAttribute("data-action")){case"close":case"cancel":this.hide();break;case"save":this.saveSettings();break;case"add-category":this.addNewCategory()}}),document.addEventListener("keydown",n=>{var e;"Escape"===n.key&&(null==(e=this.modal)?void 0:e.classList.contains("show"))&&this.hide()}))}injectStyles(){const n="setting-panel-styles";if(document.getElementById(n))return;const e=document.createElement("style");e.id=n,e.textContent="\n            .settings-btn {\n                width: 28px;\n                height: 28px;\n                border-radius: 4px;\n                border: 1px solid #ddd;\n                background: #f8f9fa;\n                color: #495057;\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                font-size: 14px;\n                transition: all 0.2s ease;\n                flex-shrink: 0;\n                background-image: url('/assets/icon/settings.svg');\n                background-repeat: no-repeat;\n                background-position: center;\n                background-size: 16px 16px;\n            }\n\n            .settings-btn:hover {\n                background-color: #e9ecef;\n                border-color: #adb5bd;\n                transform: scale(1.05);\n            }\n\n            .settings-btn:active {\n                transform: scale(0.95);\n            }\n\n            .settings-modal {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.5);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                z-index: 20000;\n                opacity: 0;\n                visibility: hidden;\n                transition: opacity 0.3s ease, visibility 0.3s ease;\n                box-sizing: border-box;\n                padding: 20px;\n            }\n\n            .settings-modal.show {\n                opacity: 1;\n                visibility: visible;\n            }\n\n            .settings-modal-content {\n                background: white;\n                border-radius: 12px;\n                width: 90%;\n                max-width: 600px;\n                max-height: 85vh;\n                overflow: hidden;\n                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n                display: flex;\n                flex-direction: column;\n            }\n\n            .settings-modal-header {\n                padding: 24px 24px 20px 24px;\n                border-bottom: 1px solid #f0f0f0;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);\n                flex-shrink: 0;\n            }\n\n            .settings-modal-header h3 {\n                margin: 0;\n                color: #2c3e50;\n                font-size: 20px;\n                font-weight: 600;\n            }\n\n            .header-actions {\n                display: flex;\n                align-items: center;\n                gap: 12px;\n            }\n\n            .add-category-btn {\n                padding: 8px 16px;\n                border: 1px solid #007bff;\n                background: #007bff;\n                color: white;\n                border-radius: 6px;\n                cursor: pointer;\n                font-size: 13px;\n                font-weight: 500;\n                transition: all 0.2s ease;\n                display: flex;\n                align-items: center;\n                gap: 4px;\n            }\n\n            .add-category-btn:hover {\n                background: #0056b3;\n                border-color: #0056b3;\n                transform: translateY(-1px);\n                box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);\n            }\n\n            .settings-modal-close {\n                background: none;\n                border: none;\n                font-size: 24px;\n                cursor: pointer;\n                color: #666;\n                padding: 0;\n                width: 30px;\n                height: 30px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-radius: 50%;\n                transition: all 0.2s ease;\n            }\n\n            .settings-modal-close:hover {\n                background: #f8f9fa;\n                color: #333;\n            }\n\n            .settings-modal-body {\n                padding: 24px;\n                overflow-y: auto;\n                flex: 1;\n                background: #fafbfc;\n            }\n\n            .category-setting {\n                padding: 20px;\n                margin-bottom: 16px;\n                border-radius: 8px;\n                background: white;\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n                border: 1px solid #f0f0f0;\n                transition: all 0.2s ease;\n            }\n\n            .category-setting:hover {\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n                border-color: #e0e6ed;\n            }\n\n            .category-setting:last-child {\n                margin-bottom: 0;\n            }\n\n            .category-setting-header {\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                margin-bottom: 16px;\n                padding-bottom: 12px;\n                border-bottom: 1px solid #f0f0f0;\n            }\n\n            .category-name {\n                font-weight: 600;\n                color: #2c3e50;\n                font-size: 16px;\n                flex: 1;\n            }\n\n            .category-controls {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                gap: 20px;\n                margin-top: 16px;\n            }\n\n            .control-group {\n                display: flex;\n                flex-direction: column;\n                gap: 10px;\n                position: relative;\n            }\n\n            .control-label {\n                font-size: 13px;\n                font-weight: 600;\n                color: #495057;\n                margin-bottom: 6px;\n                display: flex;\n                align-items: center;\n                gap: 6px;\n            }\n\n            .control-label::before {\n                content: '';\n                width: 3px;\n                height: 12px;\n                background: linear-gradient(135deg, #007bff, #0056b3);\n                border-radius: 2px;\n            }\n\n            /* 输入框容器样式 */\n            .input-container {\n                position: relative;\n                display: flex;\n                align-items: center;\n            }\n\n            .input-unit {\n                position: absolute;\n                right: 12px;\n                font-size: 12px;\n                color: #6c757d;\n                font-weight: 500;\n                pointer-events: none;\n                background: rgba(255, 255, 255, 0.9);\n                padding: 2px 4px;\n                border-radius: 3px;\n            }\n\n            .text-style-select,\n            .text-size-input,\n            .text-stroke-width-input,\n            .icon-size-input {\n                padding: 10px 14px;\n                border: 2px solid #e8ecef;\n                border-radius: 8px;\n                font-size: 14px;\n                font-weight: 500;\n                transition: all 0.3s ease;\n                background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);\n                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);\n            }\n\n            .text-style-select:focus,\n            .text-size-input:focus,\n            .text-stroke-width-input:focus,\n            .icon-size-input:focus {\n                outline: none;\n                border-color: #007bff;\n                box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.15), 0 4px 12px rgba(0, 123, 255, 0.1);\n                transform: translateY(-1px);\n            }\n\n            .text-size-input,\n            .text-stroke-width-input,\n            .icon-size-input {\n                width: 100%;\n                text-align: center;\n                font-weight: 600;\n                color: #2c3e50;\n            }\n\n            .text-size-input:hover,\n            .text-stroke-width-input:hover,\n            .icon-size-input:hover {\n                border-color: #b8c5d1;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);\n            }\n\n            /* 数字输入框的增减按钮样式 */\n            .text-size-input::-webkit-outer-spin-button,\n            .text-size-input::-webkit-inner-spin-button,\n            .text-stroke-width-input::-webkit-outer-spin-button,\n            .text-stroke-width-input::-webkit-inner-spin-button,\n            .icon-size-input::-webkit-outer-spin-button,\n            .icon-size-input::-webkit-inner-spin-button {\n                -webkit-appearance: none;\n                margin: 0;\n            }\n\n            .text-size-input[type=number],\n             .text-stroke-width-input[type=number],\n             .icon-size-input[type=number] {\n                 -moz-appearance: textfield;\n             }\n\n             /* 输入框动画效果 */\n             .text-size-input:focus + .input-unit,\n             .text-stroke-width-input:focus + .input-unit,\n             .icon-size-input:focus + .input-unit {\n                 color: #007bff;\n                 transform: scale(1.1);\n                 font-weight: 600;\n             }\n\n             /* 复选框样式 */\n             .text-bold-input {\n                 width: 18px;\n                 height: 18px;\n                 cursor: pointer;\n                 accent-color: #007bff;\n                 transform: scale(1.2);\n             }\n\n             .text-bold-input:hover {\n                 transform: scale(1.3);\n             }\n\n             /* 颜色选择器样式 */\n             .text-color-input,\n             .text-stroke-color-input {\n                 width: 60px;\n                 height: 40px;\n                 border: 2px solid #e8ecef;\n                 border-radius: 8px;\n                 cursor: pointer;\n                 background: none;\n                 transition: all 0.3s ease;\n                 box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);\n             }\n\n             .text-color-input:hover,\n             .text-stroke-color-input:hover {\n                 border-color: #b8c5d1;\n                 box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);\n                 transform: translateY(-1px);\n             }\n\n             .text-color-input:focus,\n             .text-stroke-color-input:focus {\n                 outline: none;\n                 border-color: #007bff;\n                 box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.15), 0 4px 12px rgba(0, 123, 255, 0.1);\n             }\n\n             /* 输入框值变化时的动画 */\n             .text-size-input:valid,\n             .icon-size-input:valid {\n                 background: linear-gradient(145deg, #f8fff8 0%, #f0f8f0 100%);\n             }\n\n             /* 输入框错误状态 */\n             .text-size-input:invalid,\n             .icon-size-input:invalid {\n                 border-color: #dc3545;\n                 background: linear-gradient(145deg, #fff8f8 0%, #fdf2f2 100%);\n             }\n\n             .text-size-input:invalid + .input-unit,\n             .icon-size-input:invalid + .input-unit {\n                 color: #dc3545;\n             }\n\n             /* 输入框占位符样式 */\n             .text-size-input::placeholder,\n             .icon-size-input::placeholder {\n                 color: #adb5bd;\n                 font-style: italic;\n                 opacity: 0.7;\n             }\n\n            .icon-selector {\n                display: flex;\n                gap: 8px;\n                align-items: center;\n                flex-wrap: wrap;\n            }\n\n            .icon-option {\n                width: 40px;\n                height: 40px;\n                border: 2px solid #e0e6ed;\n                border-radius: 8px;\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                transition: all 0.2s ease;\n                background-size: 24px 24px;\n                background-repeat: no-repeat;\n                background-position: center;\n                background-color: white;\n            }\n\n            .icon-option:hover {\n                border-color: #007bff;\n                transform: translateY(-2px);\n                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.15);\n            }\n\n            .icon-option.selected {\n                border-color: #007bff;\n                background-color: #e7f3ff;\n                box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n            }\n\n            .settings-modal-footer {\n                padding: 20px 24px;\n                border-top: 1px solid #f0f0f0;\n                display: flex;\n                justify-content: flex-end;\n                gap: 12px;\n                background: white;\n                border-radius: 0 0 12px 12px;\n            }\n\n            .settings-btn-cancel {\n                padding: 10px 20px;\n                border: 1px solid #e0e6ed;\n                background: #f8f9fa;\n                color: #6c757d;\n                border-radius: 6px;\n                cursor: pointer;\n                font-size: 14px;\n                font-weight: 500;\n                transition: all 0.2s ease;\n                min-width: 80px;\n            }\n\n            .settings-btn-cancel:hover {\n                background: #e9ecef;\n                color: #495057;\n                transform: translateY(-1px);\n            }\n\n            .settings-btn-save {\n                padding: 10px 20px;\n                border: none;\n                background: #007bff;\n                color: white;\n                border-radius: 6px;\n                cursor: pointer;\n                font-size: 14px;\n                font-weight: 500;\n                transition: all 0.2s ease;\n                min-width: 80px;\n            }\n\n            .settings-btn-save:hover {\n                background: #0056b3;\n                transform: translateY(-1px);\n                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);\n            }\n        ",document.head.appendChild(e)}show(){this.modal&&(this.updateContent(),this.modal.classList.add("show"))}hide(){this.modal&&this.modal.classList.remove("show")}updateContent(){var e;const t=null==(e=this.modal)?void 0:e.querySelector(".settings-modal-body");if(!t)return;const o=n.config.icons.map(n=>n.category);t.innerHTML="",0===o.length?t.innerHTML='<p style="text-align: center; color: #666; padding: 20px;">暂无类别数据</p>':o.forEach(e=>{const o=n.getIconConfig(e),i=document.createElement("div");i.className="category-setting";const a=this.createHeader(e),s=document.createElement("div");s.className="category-controls";const r=this.createTextStyleField(e,o),c=this.createTextSizeField(e,o),l=this.createTextBoldField(e,o),d=this.createTextColorField(e,o),p=this.createTextStrokeColorField(e,o),u=this.createTextStrokeWidthField(e,o),x=this.createIconField(e,o),h=this.createIconSizeField(e,o);s.appendChild(x),s.appendChild(h),s.appendChild(r),s.appendChild(c),s.appendChild(l),s.appendChild(d),s.appendChild(p),s.appendChild(u),i.appendChild(a),i.appendChild(s),t.appendChild(i)})}createHeader(n){const e=document.createElement("div");e.className="category-setting-header";const t=document.createElement("div");return t.className="category-name",t.textContent=n,e.appendChild(t),e}createIconSizeField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="图标大小";const i=document.createElement("div");i.className="input-container";const a=document.createElement("input");a.type="number",a.className="icon-size-input",a.dataset.category=n,a.value=e.iconSize.toString(),a.min="12",a.max="128",a.placeholder="30";const s=document.createElement("span");return s.className="input-unit",s.textContent="px",i.appendChild(a),i.appendChild(s),t.appendChild(o),t.appendChild(i),t}createTextStrokeWidthField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="描边宽度";const i=document.createElement("div");i.className="input-container";const a=document.createElement("input");a.type="number",a.className="text-stroke-width-input",a.dataset.category=n,a.value=(e.textStrokeWidth||0).toString(),a.min="0",a.max="5",a.step="0.1",a.placeholder="0";const s=document.createElement("span");return s.className="input-unit",s.textContent="px",i.appendChild(a),i.appendChild(s),t.appendChild(o),t.appendChild(i),t}createTextStrokeColorField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="描边颜色";const i=document.createElement("input");return i.type="color",i.className="text-stroke-color-input",i.dataset.category=n,i.value=e.textStrokeColor||"#000000",t.appendChild(o),t.appendChild(i),t}createTextColorField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="文本颜色";const i=document.createElement("input");return i.type="color",i.className="text-color-input",i.dataset.category=n,i.value=e.textColor||"#000000",t.appendChild(o),t.appendChild(i),t}createTextBoldField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="文本粗体";const i=document.createElement("input");return i.type="checkbox",i.className="text-bold-input",i.dataset.category=n,i.checked=e.textBold||!1,t.appendChild(o),t.appendChild(i),t}createTextSizeField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="文本大小";const i=document.createElement("div");i.className="input-container";const a=document.createElement("input");a.type="number",a.className="text-size-input",a.dataset.category=n,a.value=e.textSize.toString(),a.min="8",a.max="24",a.placeholder="12";const s=document.createElement("span");return s.className="input-unit",s.textContent="px",i.appendChild(a),i.appendChild(s),t.appendChild(o),t.appendChild(i),t}createTextStyleField(n,e){const t=document.createElement("div");t.className="control-group";const o=document.createElement("label");o.className="control-label",o.textContent="文本内容";const i=document.createElement("select");i.className="text-style-select",i.dataset.category=n;return[{value:"none",text:"不显示"},{value:"code",text:"编号"},{value:"name",text:"名称"},{value:"code-name",text:"编号+名称"}].forEach(n=>{const t=document.createElement("option");t.value=n.value,t.textContent=n.text,e.textStyle===n.value&&(t.selected=!0),i.appendChild(t)}),t.appendChild(o),t.appendChild(i),t}createIconField(e,t){const o=document.createElement("div");o.className="control-group",o.style.gridColumn="1 / -1";const i=document.createElement("label");i.className="control-label",i.textContent="图标选择";const a=document.createElement("div");return a.className="icon-selector",n.icons.forEach(n=>{const o=document.createElement("div");o.className="icon-option",o.style.backgroundImage=`url('${n.path}')`,o.dataset.iconName=n.name,o.dataset.category=e,t.iconPath===n.path&&o.classList.add("selected"),o.addEventListener("click",()=>{a.querySelectorAll(".icon-option").forEach(n=>n.classList.remove("selected")),o.classList.add("selected")}),a.appendChild(o)}),o.appendChild(i),o.appendChild(a),o}async addNewCategory(){try{const t=await o.show("请输入新类别的名称：","新增类别","类别名称","");if(!t)return;if(n.getCategoryNames().includes(t))return void e.show("类别名称已存在，请使用其他名称","error");const i=n.getDefaultIconConfig(t);n.config.icons.push(i),n.categoryNames.add(t),this.updateContent(),document.dispatchEvent(new CustomEvent("categoryConfigChanged")),e.show(`类别 "${t}" 已添加`,"success")}catch(t){e.show("添加类别失败","error")}}saveSettings(){var t;const o=null==(t=this.modal)?void 0:t.querySelector(".settings-modal-body");if(!o)return;const i=[];o.querySelectorAll(".category-setting").forEach(e=>{var t,o;const a=null==(t=e.querySelector(".category-name"))?void 0:t.textContent;if(a){const t=e.querySelector(".icon-option.selected"),s=null==t?void 0:t.dataset.iconName,r=null==(o=n.icons.find(n=>n.name===s))?void 0:o.path,c=e.querySelector(".text-style-select"),l=e.querySelector(".text-size-input"),d=e.querySelector(".text-bold-input"),p=e.querySelector(".text-color-input"),u=e.querySelector(".text-stroke-color-input"),x=e.querySelector(".text-stroke-width-input"),h=e.querySelector(".icon-size-input");r&&i.push({category:a,iconPath:r,textStyle:c.value,textSize:parseInt(l.value,10)||12,textBold:d.checked,textColor:p.value,textStrokeColor:u.value,textStrokeWidth:parseFloat(x.value)||0,iconSize:parseInt(h.value,10)||32})}}),n.config.icons=i,this.hide(),e.show("设置已保存","success"),this.onConfigChanged&&this.onConfigChanged(n.config),document.dispatchEvent(new CustomEvent("categoryConfigChanged"))}initIconConfig(){const e=n.getConfig();if(e&&e.icons&&e.icons.length>0)e.icons.forEach(e=>{if(!e.iconPath){const t=n.icons.find(n=>"default"===n.name)||n.icons[0];e.iconPath=t.path}"number"!=typeof e.textSize&&(e.textSize=12),"number"!=typeof e.iconSize&&(e.iconSize=32),"boolean"!=typeof e.textBold&&(e.textBold=!1),e.textColor||(e.textColor="#000000"),e.textStrokeColor||(e.textStrokeColor="#000000"),"number"!=typeof e.textStrokeWidth&&(e.textStrokeWidth=0)});else{const e=n.getCategoryNames(),t=[];e.forEach((e,o)=>{t.push({category:e,iconPath:n.icons[o%n.icons.length].path,textStyle:"name",textSize:12,textBold:!1,textColor:"#000000",textStrokeColor:"#000000",textStrokeWidth:0,iconSize:32})}),n.config.icons=t}}};i.instance=null;let a=i;export{a as IconConfigDialog};
